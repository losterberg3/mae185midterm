clear all; close all; clc; format long; format compact;

%% Student name, ID number, class_name, and homework_number
names = 'Mayah Carlton, Lars Osterberg, Henry Thai';
class_name = 'MAE185';
homework_number = 'Midterm';

%% Part 1

%% Constants and domain setup
Nx = 75; Ny = 80;                     % Grid size
L = 1e-5; H = 8e-6;                   % Plate dimensions
dx = L / (Nx - 1); dy = H / (Ny - 1);
x = linspace(0, L, Nx); y = linspace(0, H, Ny);
[X, Y] = meshgrid(x, y);

%% Time step & flow constants
M_inf = 4; gamma = 1.4; R = 287;       % Mach, gamma, gas constant
T_inf = 300;                          % Free stream temperature
P_inf = 101325;                       % Free stream pressure
rho_inf = P_inf / (R * T_inf);
a_inf = sqrt(gamma * R * T_inf);
u_inf = M_inf * a_inf;                % Free stream velocity
mu_inf = sutherland(T_inf);          % Free stream viscosity
dt = 2.35e-11; Nsteps = 1500;

%% Initialize primitive variables
rho = rho_inf * ones(Ny, Nx);
u = u_inf * ones(Ny, Nx);
v = zeros(Ny, Nx);
T = T_inf * ones(Ny, Nx);
P = rho .* R .* T;
e = P ./ ((gamma - 1) * rho);

%% Initialize convergence tracking
residuals = zeros(1, Nsteps);

%% Main loop
for step = 1:Nsteps
    rho_old = rho;

    % Predictor step
    [rho_star, u_star, v_star, e_star] = predictor_step(rho, u, v, e, dx, dy, dt, gamma);

    % Corrector step
    [rho, u, v, e] = corrector_step(rho, u, v, e, rho_star, u_star, v_star, e_star, dx, dy, dt, gamma);

    % Clamp values to avoid unphysical blow-up
    rho = max(rho, 1e-8);
    e = max(e, 1e-8);

    % Update primitive vars
    P = (gamma - 1) * rho .* e;
    T = P ./ (rho * R);

    % Apply boundary conditions (inlet, top, wall, outlet)
    [rho, u, v, e] = apply_BC(rho, u, v, e, rho_inf, u_inf, T_inf, gamma, R);

    % Track convergence
    residuals(step) = max(max(abs(rho - rho_old)));

    % Plot every 50 steps
    if mod(step, 50) == 0
        subplot(2,3,1); imagesc(x,y,flipud(rho)); title('Density'); colorbar;
        subplot(2,3,2); imagesc(x,y,flipud(u)); title('u-velocity'); colorbar;
        subplot(2,3,3); imagesc(x,y,flipud(v)); title('v-velocity'); colorbar;
        subplot(2,3,4); imagesc(x,y,flipud(e)); title('Internal Energy'); colorbar;
        subplot(2,3,5); imagesc(x,y,flipud(P)); title('Pressure'); colorbar;
        subplot(2,3,6); imagesc(x,y,flipud(T)); title('Temperature'); colorbar;
        drawnow;
    end
end

%% Plot convergence
figure; semilogy(1:Nsteps, residuals);
title('Convergence History'); xlabel('Time Step'); ylabel('Max Residual'); grid on;





function [rho_star, u_star, v_star, e_star] = predictor_step(rho, u, v, e, dx, dy, dt, gamma)
    [Fx_rho, Fx_u, Fx_v, Fx_e] = flux_x(rho, u, v, e, gamma);
    drho_dx = ddx_fwd(Fx_rho, dx);
    du_dx   = ddx_fwd(Fx_u, dx);
    dv_dx   = ddx_fwd(Fx_v, dx);
    de_dx   = ddx_fwd(Fx_e, dx);

    rho_star = rho - dt * drho_dx;
    u_star   = u   - dt * du_dx;
    v_star   = v   - dt * dv_dx;
    e_star   = e   - dt * de_dx;
end


function [rho, u, v, e] = corrector_step(rho, u, v, e, rho_star, u_star, v_star, e_star, dx, dy, dt, gamma)
    [Fx_rho, Fx_u, Fx_v, Fx_e] = flux_x(rho_star, u_star, v_star, e_star, gamma);
    drho_dx = ddx_bwd(Fx_rho, dx);
    du_dx   = ddx_bwd(Fx_u, dx);
    dv_dx   = ddx_bwd(Fx_v, dx);
    de_dx   = ddx_bwd(Fx_e, dx);

    rho = 0.5 * (rho + rho_star - dt * drho_dx);
    u   = 0.5 * (u   + u_star   - dt * du_dx);
    v   = 0.5 * (v   + v_star   - dt * dv_dx);
    e   = 0.5 * (e   + e_star   - dt * de_dx);
end


function [rho, u, v, e] = apply_BC(rho, u, v, e, rho_inf, u_inf, T_inf, gamma, R)
    Ny = size(rho,1); Nx = size(rho,2);

    % Inlet (left edge)
    rho(:,1) = rho_inf; u(:,1) = u_inf; v(:,1) = 0;
    e(:,1) = (R * T_inf) ./ (gamma - 1);

    % Far-field (top edge)
    rho(end,:) = rho_inf; u(end,:) = u_inf; v(end,:) = 0;
    e(end,:) = (R * T_inf) ./ (gamma - 1);

    % Wall (bottom edge)
    u(1,:) = 0; v(1,:) = 0;
    e(1,:) = (R * T_inf) ./ (gamma - 1);

    % Outlet (right edge): extrapolation
    rho(:,end) = rho(:,end-1); u(:,end) = u(:,end-1);
    v(:,end) = v(:,end-1); e(:,end) = e(:,end-1);
end

